name: Deploy to Netlify

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for proper versioning

      # First delete the truncated package-lock.json
      - name: Remove invalid package-lock.json
        run: rm -f package-lock.json

      # Setup Node without cache
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Generate a fresh, complete package-lock.json
      - name: Generate fresh package-lock.json
        run: npm install --package-lock-only

      # Check if package-lock.json was created correctly
      - name: Verify package-lock.json
        run: |
          if [ -f package-lock.json ]; then
            echo "package-lock.json created successfully"
            ls -la package-lock.json
          else
            echo "Failed to create package-lock.json"
            exit 1
          fi

      # Install dependencies properly
      - name: Install dependencies
        run: npm ci || npm install

      # Build the site
      - name: Build site
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      # Deploy to Netlify
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './dist'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5